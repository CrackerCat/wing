    wing commands
       init {workspace name} {branch or tag name} {manifest name}
                Create wing-space, such as:
                wing init workspace1 develop dev.xml
                wing init workspace2 tag_1.0 release.xml
       sync [f] sync code from remote from manifests
            f:  Force switch to new branch, discard all local changes

    wing git commands:
       -status  Check if the local code has changed

       -branch  Check if the branch is consistent with the remote

       -push [f] Push code to remote
            f   Directly push to the remote end without code review

       -create {type name}
            b {new branch name} {base branch name}
                Create a new branch from the base or current branch
            t {new tag name} {base branch name} [tag message]
                Create a new tag from the base or current branch

       -switch {type name}
            b {branch name}
                Switch all git libraries in the workspace to the target branch
            t {tag name}
                Switch all git libraries in the workspace to the target tag

    wing tool commands
        -tree [l] Print directory structure
        -key {type}
            create {key type} {mode}
                create RSA public and private keys with 1024 or 2048(default) mode
            list {file} [pwd]
                print key/sign information for apk/ipa/mobileprovision/keystore/jks/rsa/... file
            hash {string}
                print md5/sha256/hash/... of string
        -adb {type}
            top
                print top windows info from Android device
            pull {package name}
                pull target apk from Android device
            dump
                get all running services and log info from Android device

    wing project commands:
       -create [type name]
            pc {name}
                Create an empty project from the template project of the Python gui client
            pp {name}
                Create an empty project from the template project of the Python publish
            ap {name} {module name}
                Create an empty project from the template project of the Android
            anp {name} {module name}
                Create an empty project from the template project of the Android with native
            ip {name} {module name}
                Create an empty project from the template project of the iOS
            jp {name} {module name}
                Create an empty project from the template project of the Java
            cp {name}
                Create an empty project from the template project of the C/C++
            gp {name}
                Create an empty project from the template project of the Go
            fp {name}
                Create an empty project from the template project of the Flutter

       -clean   Clear all the temp file, such as *.pyc

       -build [r/d] Execute mk.py file in the project directory
            r   release build
            d   debug build

       -refresh
            Scan workspace documents

    wing config commands:
       -prop {s/set} {key} [value]
            Set key and value to wing property
       -prop {g/get} {key}
            Get value from wing property
       -prop
            Print all wing properties

       -space add {name} {host} [manifest]
            Config space host information
       -space
            Print all the spcase information

    git commands: all the git commands has remain
       <git command>
