    wing commands
       init      first checkout code, like this: {project name} {branch name} {xml name}, such as:
                    wing init xxx develop android.xml
       sync [-f] [-i] update git code from wing manifest git, -f: force switch to workspace branch, -i: ignore git sync fail

    extend commands: always start with '-', such as:
       -build [module] [d/r]
                 build current project by mk.sh with debug mode
            module: project module name
                 d: debug build mode
                 r: release build mode
       -clean [gradle/git] clean cache files
                 py: python compile file cache
                 gradle: gradle cache
                 git: clean branch but current and "develop" and "master" and cache files
       -refresh
                 update CMakeLists.txt for Clion
                 update doc.md for all document files
       -adb [top/pull/stop/clear/ui] [package name]
                 top: dump activity or window info
                 pull: pull apk file of target package name
                 stop: kill target package name
                 clear: remove target app data
                 ui: dump top app activity info to ui.xml
       -branch
                 show all project branch info
       -push [f]
                 push current commit to remote
                 f: force push to remote, otherwise push for CodeReview(recommend)
       -switch [branch]
                 switch workspace to target branch
       -project
                parse all git project info to out/project.json
       -key [list] [file] [pwd]
               file: apk/ipa/jar/mobileprovision/keystore/jks/rsa
                pwd: password just for jks or keystore file
            [create] [rsa] [1024/2048]
                1024/2048: key length, 2048 default
       -setprop [key] [value]
               set wing property key with value
       -getprop [key]
               get wing property key value
       -listprop
               print all wing property

    git commands: work on the current change (see also: git help everyday)
       add       Add file contents to the index
       mv        Move or rename a file, a directory, or a symlink
       restore   Restore working tree files
       rm        Remove files from the working tree and from the index

    git commands: examine the history and state (see also: git help revisions)
       bisect    Use binary search to find the commit that introduced a bug
       diff      Show changes between commits, commit and working tree, etc
       grep      Print lines matching a pattern
       log       Show commit logs
       show      Show various types of objects
       status    Show the working tree status

    git commands: grow, mark and tweak your common history
       branch    List, create, or delete branches
       commit    Record changes to the repository
       merge     Join two or more development histories together
       rebase    Reapply commits on top of another base tip
       reset     Reset current HEAD to the specified state
       switch    Switch branches
       tag       Create, list, delete or verify a tag object signed with GPG

    git commands: collaborate (see also: git help workflows)
       fetch     Download objects and refs from another repository
       pull      Fetch from and integrate with another repository or a local branch
       push      Update remote refs along with associated objects

